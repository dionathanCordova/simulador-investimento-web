[{"/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/pages/Home/index.tsx":"1","/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/components/Footer/index.tsx":"2","/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/components/HeaderHome/index.tsx":"3","/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/components/Simulacoes/styles.ts":"4","/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/components/Simulacoes/index.tsx":"5","/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/contexts/Authcontext.tsx":"6","/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/pages/Signin/index.tsx":"7","/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/components/Input/index.tsx":"8","/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/components/Input/styles.ts":"9","/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/components/Tooltip/index.tsx":"10","/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/pages/Signin/styles.ts":"11","/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/App.tsx":"12","/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/routes/index.tsx":"13","/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/pages/Signin/index.tsx":"14","/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/utils/getValidationErrors.ts":"15","/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/components/Simulacoes/index.tsx":"16","/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/components/Input/index.tsx":"17","/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/components/HeaderHome/styles.ts":"18","/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/components/Input/styles.ts":"19","/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/components/Tooltip/styles.ts":"20","/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/pages/Home/styles.ts":"21","/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/components/HeaderHome/index.tsx":"22","/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/components/Simulacoes/styles.ts":"23","/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/contexts/Authcontext.tsx":"24","/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/pages/Home/index.tsx":"25","/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/components/Footer/index.tsx":"26"},{"size":10021,"mtime":1611585502955,"results":"27","hashOfConfig":"28"},{"size":1101,"mtime":1611322092593,"results":"29","hashOfConfig":"28"},{"size":991,"mtime":1611456356979,"results":"30","hashOfConfig":"28"},{"size":1180,"mtime":1611584851291,"results":"31","hashOfConfig":"28"},{"size":4049,"mtime":1611585578437,"results":"32","hashOfConfig":"28"},{"size":2670,"mtime":1611582811292,"results":"33","hashOfConfig":"28"},{"size":3100,"mtime":1611581048459,"results":"34","hashOfConfig":"28"},{"size":1665,"mtime":1610978746562,"results":"35","hashOfConfig":"28"},{"size":1174,"mtime":1608819530655,"results":"36","hashOfConfig":"28"},{"size":373,"mtime":1611455977242,"results":"37","hashOfConfig":"28"},{"size":1299,"mtime":1611584986225,"results":"38","hashOfConfig":"28"},{"size":386,"mtime":1609939137229,"results":"39","hashOfConfig":"40"},{"size":355,"mtime":1611457029666,"results":"41","hashOfConfig":"40"},{"size":3100,"mtime":1611581048459,"results":"42","hashOfConfig":"40"},{"size":303,"mtime":1611233577555,"results":"43","hashOfConfig":"40"},{"size":4049,"mtime":1611585578437,"results":"44","hashOfConfig":"40"},{"size":1665,"mtime":1610978746562,"results":"45","hashOfConfig":"40"},{"size":746,"mtime":1611251427892,"results":"46","hashOfConfig":"40"},{"size":1174,"mtime":1608819530655,"results":"47","hashOfConfig":"40"},{"size":854,"mtime":1608819701202,"results":"48","hashOfConfig":"40"},{"size":3404,"mtime":1611497025169,"results":"49","hashOfConfig":"40"},{"size":991,"mtime":1611456356979,"results":"50","hashOfConfig":"40"},{"size":1180,"mtime":1611584851291,"results":"51","hashOfConfig":"40"},{"size":2670,"mtime":1611589787067,"results":"52","hashOfConfig":"40"},{"size":9952,"mtime":1611590572416,"results":"53","hashOfConfig":"40"},{"size":1101,"mtime":1611322092593,"results":"54","hashOfConfig":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},"on0scr",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"r6en6r",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/pages/Home/index.tsx",["113","114","115","116","117","118","119","120","121","122","123","124"],"import React, { InputHTMLAttributes, useCallback, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Header from \"../../components/HeaderHome\";\nimport icon from '../../assets/icon-preview2.png';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport swal from \"sweetalert\";\n\nimport { \n   Container, \n   Content,\n   BoxInfo,\n   BoxImage,\n   SimuladorContent,\n   EntrarContent\n} from \"./styles\";\n\nimport Footer from \"../../components/Footer\";\nimport Simulacoes from '../../components/Simulacoes';\nimport AuthContext from \"../../contexts/Authcontext\";\nimport api from \"../../services/api\";\n\nconst Home = () => {\n   const history = useHistory();\n\n   const { user, signed, UpdateUser } = useContext(AuthContext);\n\n   const [ mesesInvestimento, setmesesInvestimento ] = useState(0); \n   const [ valorInvestimentoInicial, setValorInvestimentoInicial ] = useState(0);\n   const [ valorMensal, setValorMensal ] = useState(0);\n   const [ valorInvestido, setValorInvestido ] = useState(0);\n\n   const [ taxaCDBDI, setTaxaCDBDI ] = useState(123.5);\n   const [ taxaDI, settaxaDI ] = useState(6.39); \n   \n   const [ taxaSelic, setTaxaSelic ] = useState(2.25);\n   const [ taxaPoupanca, setTaxaPoupanca ] = useState(0);\n\n   const [ valorFinalBrutoCDB, setValorFinalBrutoCDB ] = useState(0);\n   const [ valorFinalPoupanca, setValorFinalPoupanca ] = useState(0);\n\n   const [ countSimulacoes, setCountSimulacoes ] = useState(0); \n\n   useEffect(() => {\n      setCountSimulacoes(user?.qtd_simulacoes ? user.qtd_simulacoes : 0);\n      handleRetornoRendimentoCDB();\n      handleRetornoPoupanca();\n   }, [user, mesesInvestimento, valorFinalBrutoCDB, valorInvestido, valorInvestimentoInicial, valorMensal, valorFinalBrutoCDB, valorFinalPoupanca, countSimulacoes]);\n\n   const handleSaveSimulacao = useCallback(async () => {\n      const simulacao = await api.post('/simulacao/create', {\n         valor_inicial: valorInvestimentoInicial,\n         valor_mensal: valorMensal,\n         meses_investimento: mesesInvestimento,\n         total_investido: valorInvestido,\n         total_rendimento_cdb: valorFinalBrutoCDB,\n         taxa_percentual_CDI: taxaCDBDI,\n         taxa_DI: taxaDI,\n         total_rendimento_poupanca: valorFinalPoupanca,\n         taxa_poupanca: taxaPoupanca,\n         taxa_selid: taxaSelic,\n         user_id: user.id\n      });\n\n      if(simulacao.status === 200) {\n         const simulacao = await api.get(`simulacao/find/${user.id}`);\n\n         if(simulacao.status === 200) {\n            setCountSimulacoes(simulacao.data.lenght);\n\n            swal({\n               title: \"Investidor!\",\n               text: \"Simulação de investimento armazenada com sucesso!\",\n               icon: \"success\",\n            });\n         }\n      }\n\n   }, [valorInvestimentoInicial, valorMensal, mesesInvestimento, valorInvestido, valorFinalBrutoCDB, taxaCDBDI, taxaDI, valorFinalPoupanca, taxaPoupanca, taxaSelic, user])\n\n   const handleGoToPage = useCallback((page) => {\n      history.push(page);\n   }, [history]);\n\n   const handleAddTempo = useCallback((e) => {\n      const meses = e.target.value;\n      const valorInvestimento = valorInvestimentoInicial + (valorMensal * meses);\n\n      setValorInvestido(valorInvestimento);\n      setmesesInvestimento(meses);\n\n      const dias = 30.41 * mesesInvestimento / 1;\n   }, [mesesInvestimento, valorInvestimentoInicial, valorMensal, valorInvestido, valorFinalBrutoCDB, valorFinalPoupanca]);\n\n   const handleRetornoRendimentoCDB = useCallback(() => {\n         \n      const periodoInvestimentoDias = 30.41 * mesesInvestimento / 1;\n      const taxaCDI = 110 / 100;\n      const taxaAnual = taxaCDI * taxaDI;\n      const taxaMensal= taxaAnual / 12;\n      const rendimentoMensal = ((valorInvestido * taxaMensal) / 100) * mesesInvestimento;\n      const valorTotalLiquido = valorInvestido + rendimentoMensal;\n\n      let imposto = 0;\n      if(periodoInvestimentoDias <= 180) {\n         imposto = 22.50;\n      }\n\n      if(periodoInvestimentoDias > 180 && periodoInvestimentoDias <= 360) {\n         imposto = 20;\n      }\n\n      if(periodoInvestimentoDias > 360 && periodoInvestimentoDias <= 720) {\n         imposto = 17.50;\n      }\n\n      if(periodoInvestimentoDias > 720) {\n         imposto = 15;\n      }\n\n      let valor = valorTotalLiquido - (rendimentoMensal * (imposto / 100));\n      \n      setValorFinalBrutoCDB(valor);\n     \n   }, [mesesInvestimento, valorFinalBrutoCDB, valorInvestido])\n\n   const handleRetornoPoupanca = useCallback(() => {\n      const percentualSobreSelic = 70 * taxaSelic / 100;\n      const percentRendimentoAoMes = ((percentualSobreSelic / 12) / 100) * mesesInvestimento;\n\n      setTaxaPoupanca(percentualSobreSelic);\n\n      setValorFinalPoupanca((valorInvestido * percentRendimentoAoMes) + valorInvestido);\n   }, [valorFinalPoupanca, mesesInvestimento, valorInvestido])\n\n   const handleInvestimentoInicial = useCallback((operacao: string) => {\n      switch (operacao) {\n         case '+':\n            const valorInvestimento = valorInvestimentoInicial + 250 + (valorMensal * mesesInvestimento);\n           \n            setValorInvestido(valorInvestimento);\n            setValorInvestimentoInicial(valorInvestimentoInicial + 250);\n            break;\n         case '-':\n            if(valorInvestimentoInicial - 250 >= 0) {\n               const valorInvestimento = valorInvestimentoInicial - 250 + (valorMensal * mesesInvestimento);\n               setValorInvestido(valorInvestimento);\n               setValorInvestimentoInicial(valorInvestimentoInicial - 250);\n            }\n            break;\n      }\n   }, [valorInvestimentoInicial, valorMensal, mesesInvestimento, valorFinalBrutoCDB, valorFinalPoupanca])\n\n   const handleInvestimentoMensal = useCallback((operacao: string) => {\n      switch (operacao) {\n         case '+':\n            const valorInvestimento = valorInvestimentoInicial + ((valorMensal + 100) * mesesInvestimento);\n            setValorInvestido(valorInvestimento);\n\n            setValorMensal(valorMensal + 100);\n            break;\n         case '-':\n            if(valorMensal - 100 >= 0) {\n               const valorInvestimento = valorInvestimentoInicial + ((valorMensal - 100) * mesesInvestimento);\n               setValorInvestido(valorInvestimento);\n               setValorMensal(valorMensal - 100);\n            }\n      }\n   }, [valorInvestimentoInicial, valorMensal, mesesInvestimento, valorFinalBrutoCDB, valorFinalPoupanca])\n\n   return (\n      <Container>\n         <Header />\n         <Content>\n            <BoxInfo>\n               <p className=\"title\">\n                  Simule seus \n                  <span> Investimentos</span>\n               </p>\n\n               <p className=\"description\">\n                  Conheça o simulador de investimento comparando o rendimento entre CDB e a poupança e descubra qual terá a melhor rentabilidade.\n               </p>\n            </BoxInfo>\n\n            <BoxImage>\n               <img src={icon} alt=\"\" width=\"80%\"/>\n            </BoxImage>\n         </Content>\n\n         {signed && \n            <SimuladorContent>\n               <div className=\"simulador\">\n                  <div className=\"boxSimulacaoData\">\n                     <h4>Deposito inicial</h4>\n\n                     <div className=\"valores\">\n                        <p>R$</p>\n                        <p>{valorInvestimentoInicial.toFixed(2)}</p>\n                        <div>\n                           <button onClick={() => handleInvestimentoInicial('-')}> - </button>\n                           <button onClick={() => handleInvestimentoInicial('+')}> + </button>\n                        </div>\n                     </div>\n\n                     <h4>Deposito mensal</h4>\n\n                     <div className=\"valores\">\n                        <p>R$</p>\n                        <p>{valorMensal.toFixed(2)}</p>\n                        <div>\n                           <button onClick={() => handleInvestimentoMensal('-')}> - </button>\n                           <button onClick={() => handleInvestimentoMensal('+')}> + </button>\n                        </div>\n                     </div>\n\n                     <h4>Tempo de investimento</h4>\n                     <p>{mesesInvestimento} meses </p> \n                     <RangeSlider\n                        value={mesesInvestimento}\n                        onChange={e => handleAddTempo(e)}\n                     />\n                  </div>\n               \n                  <div className=\"boxSimulacaoResultado\">\n                     <h4>Total investidos</h4>\n\n                     <div className=\"valores\">\n                        <p>R$</p>\n                        <p>{valorInvestido.toFixed(2)}</p>\n                     </div>\n\n                     <h4>Na Poupança renderia <span>com taxa de {taxaPoupanca} % a.a</span></h4>\n\n                     <div className=\"valores\">\n                        <p>R$</p>\n                        <p>{valorFinalPoupanca.toFixed(2)}</p>\n                     </div>\n\n                     <h4>No CDB renderia  <small> com CDI de {taxaCDBDI} % a.a </small></h4>\n\n                     <div className=\"valores\">\n                        <p>R$</p>\n                        <p>{valorFinalBrutoCDB.toFixed(2)}</p>\n                     </div>\n                  \n                  </div><br/>\n               </div>\n              \n               <EntrarContent>\n                  <button onClick={handleSaveSimulacao}>\n                     Registrar simulação\n                  </button>\n               </EntrarContent>\n            </SimuladorContent>\n         }\n\n         {!signed && \n            <EntrarContent>\n               <button onClick={() => handleGoToPage('/signin')}>\n                  Fazer simulações\n               </button>\n            </EntrarContent>\n         }\n\n         {user && \n            <Simulacoes qtd_simulacao={countSimulacoes}/>\n         }\n\n         <Footer />\n      </Container>\n   );\n};\n\nexport default Home;\n","/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/components/Footer/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/components/HeaderHome/index.tsx",["125"],"import React, {useCallback, useContext, useEffect} from \"react\";\nimport { FiLogOut } from \"react-icons/fi\";\nimport { useHistory } from \"react-router-dom\";\nimport icon from \"../../assets/investimentoIcone.png\";\nimport AuthContext from \"../../contexts/Authcontext\";\n\nimport { Container, Content, BoxSign } from \"./styles\";\n\nconst Header = () => {\n   const history = useHistory();\n   const { user, SignOut } = useContext(AuthContext);\n\n   const handleGoToPage = useCallback((page) => {\n      history.push(page);\n   }, [history]);\n\n   return (\n      <Container>\n         <Content>\n            <img src={icon} alt=\"\" />\n\n            <BoxSign>\n               \n               {user?.name && <button> {user.name} </button>}\n                  \n               {!user && <button onClick={() => handleGoToPage('/signin')}>Investidor</button>}\n               <button onClick={SignOut}><FiLogOut /> </button>\n            </BoxSign>\n\n         </Content>\n      </Container>\n   );\n};\n\nexport default Header;\n","/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/components/Simulacoes/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/components/Simulacoes/index.tsx",["126","127","128"],"import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { FiTrash } from \"react-icons/fi\";\nimport AuthContext from \"../../contexts/Authcontext\";\nimport api from \"../../services/api\";\n\nimport { Container, Content, CardSimulacao } from \"./styles\";\n\ninterface SimulacaoProps {\n   created_at: Date;\n   id: string;\n   meses_investimento: number;\n   taxa_DI: number;\n   taxa_percentual_CDI: number;\n   taxa_poupanca: number;\n   taxa_selid: number;\n   total_investido: number;\n   total_rendimento_cdb: number;\n   total_rendimento_poupanca: number;\n   updated_at: number;\n   user_id: number;\n   valor_inicial: number;\n   valor_mensal: number;\n}\n\ninterface Props {\n   qtd_simulacao: number;\n}\n\nconst Simulacoes: React.FC<Props> = ({qtd_simulacao}: Props) => {\n   const { user } = useContext(AuthContext);\n   const [ simulacoes, setSimulacoes ] = useState([]);\n\n   const formatMoney = useCallback((value: number) => {\n      const numberFormat = new Intl.NumberFormat('pt-BR', {\n         style: 'currency',\n         currency: 'BRL',\n         minimumFractionDigits: 2\n      }).format(value);\n\n      return numberFormat;\n   }, [])\n\n   useEffect(() => {\n      async function getSimulacoes() {\n         if(user) {\n            handleFindSimulacoesUser();\n         }\n      } \n      getSimulacoes();\n   }, [user, qtd_simulacao])\n\n   const handleFindSimulacoesUser = useCallback(async () => {\n      const simulacao = await api.get(`simulacao/find/${user.id}`);\n\n      if(simulacao.status === 200) {\n         setSimulacoes(simulacao.data);\n      }\n   }, [simulacoes])\n\n   const handleRemoveSimulacao = useCallback(async (simulacao_id: string) => {\n      const remove = await api.delete(`simulacao/remove/${simulacao_id}/${user.id}`);\n\n      if(remove.status === 200) {\n         handleFindSimulacoesUser();\n      }\n   }, [])\n   \n   \n   return (\n      <Container>\n         <Content>\n            <h1>Minhas simulações registradas</h1>\n            {qtd_simulacao > 0 && \n               <CardSimulacao>\n                  {simulacoes.map((simulacao: SimulacaoProps) => {\n                     const data = new Date(simulacao.created_at);\n                     return (\n                        <div className=\"simulacao\" key={simulacao.id}>\n                           <div className=\"headerCard\">\n                              <h3>Dados</h3> \n                              <button onClick={() => handleRemoveSimulacao(simulacao.id)}>\n                                 <FiTrash />\n                              </button>\n                           </div>\n                           <p>Data: {`${data.getDate()}/${data.getMonth() + 1}/${data.getFullYear()}`}</p>\n                           <p>Valor inicial: {formatMoney(simulacao.valor_inicial)}</p>\n                           <p>Valor mensal: {formatMoney(simulacao.valor_mensal)}</p>\n                           <p>Total investimento: {formatMoney(simulacao.total_investido)}</p>\n                           <p>Meses de investimento: {simulacao.meses_investimento}</p><br/><hr/><br/>\n\n                           <h3>Rendimento CDB</h3>\n                           <p>Total rendimento: {formatMoney(simulacao.total_rendimento_cdb)}</p>\n                           <p>Taxa DI: {simulacao.taxa_DI} a.a</p>\n                           <p>Taxa Percentual CDB: {simulacao.taxa_percentual_CDI} %</p><br/><hr/><br/>\n\n                           <h3>Rendimento Poupança</h3>\n                           <p>Total rendimento: {formatMoney(simulacao.total_rendimento_poupanca)}</p>\n                           <p>Taxa poupança: {simulacao.taxa_poupanca}</p>\n                           <p>Taxa selic: {simulacao.taxa_selid}</p>\n                        </div>\n                     )\n                  })}\n               </CardSimulacao>\n            }\n\n            {qtd_simulacao <= 0 &&\n               <div className='emptySimulations'>\n                  <h3>Nenhuma simulação registrada no momento</h3>\n               </div>\n            }\n         </Content>\n      </Container>\n   );\n};\n\nexport default Simulacoes;\n","/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/contexts/Authcontext.tsx",["129","130"],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/pages/Signin/index.tsx",["131"],"import React, { useCallback, useContext, useRef } from \"react\";\nimport { FiChevronLeft, FiMail, FiLock, FiUser, FiPhone } from \"react-icons/fi\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport { Form } from \"@unform/web\";\nimport { FormHandles } from \"@unform/core\";\nimport * as Yup from \"yup\";\nimport getValidationError from \"../../utils/getValidationErrors\";\nimport AuthProvider from \"../../contexts/Authcontext\";\nimport swal from \"sweetalert\";\n\nimport { Container, Content, Background } from \"./styles\";\n\nimport api from \"../../services/api\";\nimport { useHistory } from \"react-router-dom\";\ninterface DataProps {\n   email: string;\n   name: string;\n   telefone: string;\n}\n\nconst Sigin = () => {\n   const formRef = useRef<FormHandles>(null);\n   const { SignIn } = useContext(AuthProvider);\n   const history = useHistory();\n\n   const handleSubmit = useCallback(\n      async (data: DataProps) => {\n         try {\n            const { email, name, telefone } = data;\n\n            const schema = Yup.object().shape({\n               email: Yup.string()\n                  .email(\"Digite um email valido\")\n                  .required(\"Email é obrigatorio\"),\n               name: Yup.string().required('Nome é obrigatório'),\n               telefone: Yup.string().required('Telefone é obrigatório')\n            });\n\n            await schema.validate(data, {\n               abortEarly: false,\n            });\n\n            try {\n               const user = await api.post(\"/users/create\", {\n                  email,\n                  name,\n                  telefone\n               });\n\n               if (user.data.statusCode === 200) {\n                  const email = user.data.user.user.email;\n                  await SignIn(email);\n                  history.push(\"/\");\n               }\n            } catch (error) {\n               console.log(error);\n               swal({\n                  title: \"Ops!\",\n                  text: \"Algo errado no sistema.\",\n                  icon: \"warning\",\n               });\n            }\n            \n         } catch (error) {\n            console.log(error);\n            const errorInner = JSON.stringify(error.inner);\n\n            const errors = getValidationError(errorInner);\n            formRef.current?.setErrors(errors);\n         }\n      },\n      [SignIn, history]\n   );\n\n   return (\n      <Container>\n         <Content>\n            <Form ref={formRef} onSubmit={handleSubmit}>\n               Cadastre seu dados\n               <h1>Informações do investidor</h1>\n\n               <Input name=\"name\" placeholder=\"Nome completo\" icon={FiUser} type=\"text\"/>\n               <Input name=\"email\" placeholder=\"E-mail\" icon={FiMail} type=\"E-mail\"/>\n               <Input name=\"telefone\" placeholder=\"Telefone\" icon={FiPhone} type=\"text\"/>\n               <Button type=\"submit\">Cadastrar</Button>\n            </Form>\n\n            <a href=\"/\">\n               <FiChevronLeft />\n               Voltar\n            </a>\n         </Content>\n         <Background></Background>\n      </Container>\n   );\n};\n\nexport default Sigin;\n","/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/components/Input/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/components/Input/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/components/Tooltip/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/web/src/pages/Signin/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/App.tsx",[],["132","133"],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/routes/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/pages/Signin/index.tsx",["134"],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/utils/getValidationErrors.ts",["135"],"interface ErrorResponse {\n   [key: string] : string;\n}\n\nexport default function getValidationErrors(err: string): any {\n   const er = JSON.parse(err);\n   const validation: ErrorResponse = {};\n\n   er.map((erro:ErrorResponse) => {\n      validation[erro.path] = erro.message;\n   })\n\n   return validation;\n}","/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/components/Simulacoes/index.tsx",["136","137","138"],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/components/Input/index.tsx",[],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/components/HeaderHome/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/components/Input/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/components/Tooltip/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/pages/Home/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/components/HeaderHome/index.tsx",["139"],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/components/Simulacoes/styles.ts",[],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/contexts/Authcontext.tsx",["140","141"],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/pages/Home/index.tsx",["142","143","144","145","146","147","148","149","150","151","152","153"],"/home/dntcordova/Documents/PROJETOS/TEST-EQI/simulador-investimento-web/src/components/Footer/index.tsx",[],{"ruleId":"154","severity":1,"message":"155","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":36},{"ruleId":"154","severity":1,"message":"158","line":27,"column":26,"nodeType":"156","messageId":"157","endLine":27,"endColumn":36},{"ruleId":"154","severity":1,"message":"159","line":34,"column":23,"nodeType":"156","messageId":"157","endLine":34,"endColumn":35},{"ruleId":"154","severity":1,"message":"160","line":35,"column":20,"nodeType":"156","messageId":"157","endLine":35,"endColumn":29},{"ruleId":"154","severity":1,"message":"161","line":37,"column":23,"nodeType":"156","messageId":"157","endLine":37,"endColumn":35},{"ruleId":"162","severity":1,"message":"163","line":49,"column":7,"nodeType":"164","endLine":49,"endColumn":164,"suggestions":"165"},{"ruleId":"154","severity":1,"message":"166","line":93,"column":13,"nodeType":"156","messageId":"157","endLine":93,"endColumn":17},{"ruleId":"162","severity":1,"message":"167","line":94,"column":7,"nodeType":"164","endLine":94,"endColumn":121,"suggestions":"168"},{"ruleId":"162","severity":1,"message":"169","line":126,"column":7,"nodeType":"164","endLine":126,"endColumn":62,"suggestions":"170"},{"ruleId":"162","severity":1,"message":"171","line":135,"column":7,"nodeType":"164","endLine":135,"endColumn":62,"suggestions":"172"},{"ruleId":"162","severity":1,"message":"173","line":153,"column":7,"nodeType":"164","endLine":153,"endColumn":105,"suggestions":"174"},{"ruleId":"162","severity":1,"message":"173","line":170,"column":7,"nodeType":"164","endLine":170,"endColumn":105,"suggestions":"175"},{"ruleId":"154","severity":1,"message":"176","line":1,"column":41,"nodeType":"156","messageId":"157","endLine":1,"endColumn":50},{"ruleId":"162","severity":1,"message":"177","line":50,"column":7,"nodeType":"164","endLine":50,"endColumn":28,"suggestions":"178"},{"ruleId":"162","severity":1,"message":"179","line":58,"column":7,"nodeType":"164","endLine":58,"endColumn":19,"suggestions":"180"},{"ruleId":"162","severity":1,"message":"181","line":66,"column":7,"nodeType":"164","endLine":66,"endColumn":9,"suggestions":"182"},{"ruleId":"154","severity":1,"message":"183","line":35,"column":12,"nodeType":"156","messageId":"157","endLine":35,"endColumn":16},{"ruleId":"154","severity":1,"message":"184","line":36,"column":12,"nodeType":"156","messageId":"157","endLine":36,"endColumn":18},{"ruleId":"154","severity":1,"message":"185","line":2,"column":33,"nodeType":"156","messageId":"157","endLine":2,"endColumn":39},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"154","severity":1,"message":"185","line":2,"column":33,"nodeType":"156","messageId":"157","endLine":2,"endColumn":39},{"ruleId":"190","severity":1,"message":"191","line":9,"column":32,"nodeType":"192","messageId":"193","endLine":9,"endColumn":34},{"ruleId":"162","severity":1,"message":"177","line":50,"column":7,"nodeType":"164","endLine":50,"endColumn":28,"suggestions":"194"},{"ruleId":"162","severity":1,"message":"179","line":58,"column":7,"nodeType":"164","endLine":58,"endColumn":19,"suggestions":"195"},{"ruleId":"162","severity":1,"message":"181","line":66,"column":7,"nodeType":"164","endLine":66,"endColumn":9,"suggestions":"196"},{"ruleId":"154","severity":1,"message":"176","line":1,"column":41,"nodeType":"156","messageId":"157","endLine":1,"endColumn":50},{"ruleId":"154","severity":1,"message":"183","line":35,"column":12,"nodeType":"156","messageId":"157","endLine":35,"endColumn":16},{"ruleId":"154","severity":1,"message":"184","line":36,"column":12,"nodeType":"156","messageId":"157","endLine":36,"endColumn":18},{"ruleId":"154","severity":1,"message":"155","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":36},{"ruleId":"154","severity":1,"message":"159","line":34,"column":23,"nodeType":"156","messageId":"157","endLine":34,"endColumn":35},{"ruleId":"154","severity":1,"message":"160","line":35,"column":20,"nodeType":"156","messageId":"157","endLine":35,"endColumn":29},{"ruleId":"154","severity":1,"message":"161","line":37,"column":23,"nodeType":"156","messageId":"157","endLine":37,"endColumn":35},{"ruleId":"162","severity":1,"message":"163","line":49,"column":7,"nodeType":"164","endLine":49,"endColumn":164,"suggestions":"197"},{"ruleId":"162","severity":1,"message":"198","line":77,"column":7,"nodeType":"164","endLine":77,"endColumn":188,"suggestions":"199"},{"ruleId":"154","severity":1,"message":"166","line":90,"column":13,"nodeType":"156","messageId":"157","endLine":90,"endColumn":17},{"ruleId":"162","severity":1,"message":"167","line":91,"column":7,"nodeType":"164","endLine":91,"endColumn":121,"suggestions":"200"},{"ruleId":"162","severity":1,"message":"169","line":123,"column":7,"nodeType":"164","endLine":123,"endColumn":62,"suggestions":"201"},{"ruleId":"162","severity":1,"message":"171","line":132,"column":7,"nodeType":"164","endLine":132,"endColumn":62,"suggestions":"202"},{"ruleId":"162","severity":1,"message":"173","line":150,"column":7,"nodeType":"164","endLine":150,"endColumn":105,"suggestions":"203"},{"ruleId":"162","severity":1,"message":"173","line":167,"column":7,"nodeType":"164","endLine":167,"endColumn":105,"suggestions":"204"},"@typescript-eslint/no-unused-vars","'InputHTMLAttributes' is defined but never used.","Identifier","unusedVar","'UpdateUser' is assigned a value but never used.","'setTaxaCDBDI' is assigned a value but never used.","'settaxaDI' is assigned a value but never used.","'setTaxaSelic' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleRetornoPoupanca' and 'handleRetornoRendimentoCDB'. Either include them or remove the dependency array.","ArrayExpression",["205"],"'dias' is assigned a value but never used.","React Hook useCallback has unnecessary dependencies: 'valorFinalBrutoCDB', 'valorFinalPoupanca', and 'valorInvestido'. Either exclude them or remove the dependency array.",["206"],"React Hook useCallback has a missing dependency: 'taxaDI'. Either include it or remove the dependency array.",["207"],"React Hook useCallback has a missing dependency: 'taxaSelic'. Either include it or remove the dependency array.",["208"],"React Hook useCallback has unnecessary dependencies: 'valorFinalBrutoCDB' and 'valorFinalPoupanca'. Either exclude them or remove the dependency array.",["209"],["210"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'handleFindSimulacoesUser'. Either include it or remove the dependency array.",["211"],"React Hook useCallback has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["212"],"React Hook useCallback has missing dependencies: 'handleFindSimulacoesUser' and 'user.id'. Either include them or remove the dependency array.",["213"],"'user' is assigned a value but never used.","'signed' is assigned a value but never used.","'FiLock' is defined but never used.","no-native-reassign",["214"],"no-negated-in-lhs",["215"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["216"],["217"],["218"],["219"],"React Hook useCallback has a missing dependency: 'UpdateUser'. Either include it or remove the dependency array.",["220"],["221"],["222"],["223"],["224"],["225"],{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"234","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},"no-global-assign","no-unsafe-negation",{"desc":"237","fix":"243"},{"desc":"239","fix":"244"},{"desc":"241","fix":"245"},{"desc":"226","fix":"246"},{"desc":"247","fix":"248"},{"desc":"228","fix":"249"},{"desc":"230","fix":"250"},{"desc":"232","fix":"251"},{"desc":"234","fix":"252"},{"desc":"234","fix":"253"},"Update the dependencies array to be: [user, mesesInvestimento, valorFinalBrutoCDB, valorInvestido, valorInvestimentoInicial, valorMensal, valorFinalPoupanca, countSimulacoes, handleRetornoRendimentoCDB, handleRetornoPoupanca]",{"range":"254","text":"255"},"Update the dependencies array to be: [mesesInvestimento, valorInvestimentoInicial, valorMensal]",{"range":"256","text":"257"},"Update the dependencies array to be: [mesesInvestimento, taxaDI, valorInvestido]",{"range":"258","text":"259"},"Update the dependencies array to be: [taxaSelic, mesesInvestimento, valorInvestido]",{"range":"260","text":"261"},"Update the dependencies array to be: [valorInvestimentoInicial, valorMensal, mesesInvestimento]",{"range":"262","text":"263"},{"range":"264","text":"263"},"Update the dependencies array to be: [user, qtd_simulacao, handleFindSimulacoesUser]",{"range":"265","text":"266"},"Update the dependencies array to be: [user.id]",{"range":"267","text":"268"},"Update the dependencies array to be: [handleFindSimulacoesUser, user.id]",{"range":"269","text":"270"},{"range":"271","text":"266"},{"range":"272","text":"268"},{"range":"273","text":"270"},{"range":"274","text":"255"},"Update the dependencies array to be: [valorInvestimentoInicial, valorMensal, mesesInvestimento, valorInvestido, valorFinalBrutoCDB, taxaCDBDI, taxaDI, valorFinalPoupanca, taxaPoupanca, taxaSelic, user.id, UpdateUser]",{"range":"275","text":"276"},{"range":"277","text":"257"},{"range":"278","text":"259"},{"range":"279","text":"261"},{"range":"280","text":"263"},{"range":"281","text":"263"},[1715,1872],"[user, mesesInvestimento, valorFinalBrutoCDB, valorInvestido, valorInvestimentoInicial, valorMensal, valorFinalPoupanca, countSimulacoes, handleRetornoRendimentoCDB, handleRetornoPoupanca]",[3425,3539],"[mesesInvestimento, valorInvestimentoInicial, valorMensal]",[4478,4533],"[mesesInvestimento, taxaDI, valorInvestido]",[4882,4937],"[taxaSelic, mesesInvestimento, valorInvestido]",[5676,5774],"[valorInvestimentoInicial, valorMensal, mesesInvestimento]",[6421,6519],[1316,1337],"[user, qtd_simulacao, handleFindSimulacoesUser]",[1562,1574],"[user.id]",[1828,1830],"[handleFindSimulacoesUser, user.id]",[1316,1337],[1562,1574],[1828,1830],[1715,1872],[2775,2956],"[valorInvestimentoInicial, valorMensal, mesesInvestimento, valorInvestido, valorFinalBrutoCDB, taxaCDBDI, taxaDI, valorFinalPoupanca, taxaPoupanca, taxaSelic, user.id, UpdateUser]",[3356,3470],[4409,4464],[4813,4868],[5607,5705],[6352,6450]]